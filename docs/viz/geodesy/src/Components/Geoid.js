import React, { Suspense, useEffect } from "react";
import { useGLTF } from "@react-three/drei";
import { LoadingScreen } from "./Loading";
import { GEOID_NAME, MODEL_LAYER, MODEL_RADIUS } from "../Constants";

const GEOID_MODEL_PATH = "./models/Geoid.glb";

/**
 * Imports the 3D model of the EGM2008 geoid (asset created specifically for this project).
 *
 * Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
export function Geoid({ isVisible, onGeoidLoad }) {
    return (
        <Suspense fallback={<LoadingScreen />}>
            <GeoidModel isVisible={isVisible} onGeoidLoad={onGeoidLoad}/>
        </Suspense>
    );
}

function GeoidModel({isVisible, onGeoidLoad}) {
    const { nodes, materials } = useGLTF(GEOID_MODEL_PATH);

    useEffect(() => {
        console.log("Loaded geoid model");
        onGeoidLoad();
    }, []);

    return (
        <group dispose={null}>
            <mesh
                geometry={nodes.Sphere.geometry}
                material={materials.GeoidFlatMaterial}

                name={GEOID_NAME}
                scale={MODEL_RADIUS}
                layers={MODEL_LAYER}
                visible={isVisible}
            />
        </group>
    );
}

useGLTF.preload(GEOID_MODEL_PATH);
