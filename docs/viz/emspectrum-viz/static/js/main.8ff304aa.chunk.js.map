{"version":3,"sources":["Hyperion_Oil_Sands_Rainbow.gif","Components/Slider.js","Components/MovableGif.js","App.js","index.js"],"names":["Slider","min","max","initialValue","disabled","handleValueChange","useState","value","setValue","id","type","onInput","event","newValue","target","MovableGif","gif","setGif","instructions","setInstructions","src","gifImage","alt","onLoad","superGif","SuperGif","auto_play","progressbar_height","progressbar_foreground_color","load","pause","move_to","MIN_FRAME_INDEX","MAX_FRAME_INDEX","START_FRAME_INDEX","sliderValue","App","currentImage","setCurrentImage","currentPixel","setCurrentPixel","window","matchMedia","matches","setMatches","imageData","River","graph","pixel","Road","Mine","Pond","Forest","Soil","useEffect","addEventListener","e","className","href","Object","keys","map","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8ff304aa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Hyperion_Oil_Sands_Rainbow.39357a85.gif\";","import { useState } from \"react\";\nimport \"./styles/Slider.css\";\n\nexport function Slider({min, max, initialValue, disabled, handleValueChange}) {\n    const [value, setValue] = useState(initialValue);\n\n    const handleChange = (event) => {\n        const newValue = event.target.value;\n        if (min <= newValue <= max) {\n            setValue(newValue);\n            handleValueChange(newValue);\n        }\n    };\n\n    return (\n        <>\n            <div>\n                <input\n                    id=\"slider\"\n                    type=\"range\"\n                    min={min}\n                    max={max}\n                    value={value}\n                    disabled={disabled}\n                    onInput={handleChange}\n                />\n                <table>\n                    <tr>\n                        <th>357</th>\n                        <th id=\"padding\">1567</th>\n                        <th>2777</th>\n                    </tr>\n                    <tr>\n                        <th></th>\n                        <th>Wavelength (nm)</th>\n                        <th></th>\n                    </tr>\n                </table>                \n            </div>            \n        </>\n    );\n}","import gifImage from \"../Hyperion_Oil_Sands_Rainbow.gif\";\nimport { useState } from \"react\";\nimport SuperGif from \"libgif\";\nimport { Slider } from \"./Slider\";\nimport \"./styles/MovableGif.css\";\n\nexport const MIN_FRAME_INDEX = 0;\nexport const MAX_FRAME_INDEX = 241;\nexport const START_FRAME_INDEX = 9;\n\nexport function MovableGif() {\n    const [gif, setGif] = useState(null);    \n    const [instructions, setInstructions] = useState(\"Please wait while images are loading...\");\n \n    const handleSliderChange = (sliderValue) => {\n        if (gif) {            \n            gif.move_to(sliderValue - 1);\n        }\n    };\n    \n    return (\n        <div id=\"gif-wrapper\">\n            <img id=\"gif-image\"\n                src={gifImage}\n                alt=\"\"                \n                onLoad={(event) => {                   \n                    \n                    const superGif = new SuperGif({ gif: event.target, \n                                                    auto_play: 1, \n                                                    progressbar_height: 10, \n                                                    progressbar_foreground_color: \"#4287f5\"});                    \n                    superGif.load(() => {                    \n                        setGif(superGif);                        \n                        superGif.pause();\n                        superGif.move_to(START_FRAME_INDEX);                                    \n                        setInstructions(\"Drag the slider below to change the band and wavelength\");\n\n                    });\n                }}\n            />\n            <h5 id=\"slider-instructions\">{instructions}</h5>\n            <Slider\n                min={MIN_FRAME_INDEX + 1}\n                max={MAX_FRAME_INDEX + 1}\n                initialValue = {START_FRAME_INDEX + 1}\n                disabled={!gif}\n                handleValueChange={handleSliderChange}\n            />            \n        </div>\n    );\n}","import { MovableGif } from \"./Components/MovableGif\";\nimport { useEffect, useState } from 'react';\nimport './App.css';\n\nfunction App() {\n    const [currentImage, setCurrentImage] = useState(\"./images/graph_river.png\")\n    const [currentPixel, setCurrentPixel] = useState(\"./pixels/river_pixel.png\")\n    const [matches, setMatches] = useState(window.matchMedia(\"(max-width: 520px)\").matches)\n\n    // data structure that connects pixel positions to images\n    const imageData = { River: {graph: \"./images/graph_river.png\", pixel: \"./pixels/river_pixel.png\"}, \n                        Road: {graph:\"./images/graph_road.png\", pixel: \"./pixels/road_pixel.png\" },\n                        Mine: {graph: \"./images/graph_mine.png\", pixel: \"./pixels/mine_pixel.png\"},\n                        Pond: {graph: \"./images/graph_pond.png\", pixel: \"./pixels/pond_pixel.png\"},\n                        Forest: {graph: \"./images/graph_forest.png\", pixel: \"./pixels/forest_pixel.png\"},\n                        Soil: {graph: \"./images/graph_soil.png\", pixel: \"./pixels/soil_pixel.png\"}\n    };\n\n    useEffect(() => {\n        window.matchMedia(\"(max-width: 520px)\").addEventListener(\"change\", e => setMatches(e.matches));\n    });\n\n    return (                  \n        <div className=\"main\">\n            {matches && \n            <><div id=\"error-message\">\n                <h5>Sorry, this visualization cannot be displayed on your device</h5>\n                <h5>Please try visiting this page on a tablet, laptop, or desktop</h5>\n            </div>\n            <div id=\"textbook-link\">\n                <a href=\"https://ubc-geomatics-textbook.github.io/geomatics-textbook/fundamentals-of-remote-sensing.html#electromagnetic-spectrum\">\n                    Back to textbook\n                </a>\n            </div>\n            </>}  \n            \n            {!matches &&          \n            <><div id=\"gif-slider-wrapper\">\n                <div id=\"textbook-link\">\n                    <a href=\"https://ubc-geomatics-textbook.github.io/geomatics-textbook/fundamentals-of-remote-sensing.html#electromagnetic-spectrum\">\n                        Back to textbook\n                    </a>\n                </div>\n                <div id=\"gif-pixel-legend-wrapper\">\n                    <img id=\"pixel-frame\" src={currentPixel} alt=\"pixel frame\"></img>\n                    <img id=\"legend\" src=\"./images/colour-legend.png\" alt=\"colour legend for reflectance values\"></img>\n                    <MovableGif />\n                </div>\n\n            </div><div id=\"button-menu\">\n                    <h5 id=\"menu-title\">Click a button below to display a pixel and its spectral graph</h5>\n                    {Object.keys(imageData).map((e) => {\n                        return <button\n                            type=\"button\"\n                            onClick={() => {\n                                setCurrentImage(imageData[e].graph);\n                                setCurrentPixel(imageData[e].pixel);\n                            } }>{e}\n                        </button>;\n                    })}\n                </div>\n                <div id=\"graph\">\n                    <img id=\"graph-image\" src={currentImage} alt=\"spectral graph\"></img>\n                </div></>}          \n        </div>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}